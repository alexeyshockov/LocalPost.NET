name: localpost
networks:
  redpanda_network:
    driver: bridge
volumes:
  redpanda:
    driver: local
  localstack:
    driver: local
services:
  localstack:
    # https://docs.localstack.cloud/getting-started/installation/#docker-compose
    image: localstack/localstack:4
    ports:
      - "127.0.0.1:4566:4566"           # LocalStack Gateway
      - "127.0.0.1:4510-4559:4510-4559" # External services port range
    environment:
      # LocalStack configuration: https://docs.localstack.cloud/references/configuration/
      - DEBUG=${DEBUG:-0}
      - SERVICES=sqs
    volumes:
      # Local volume
      - localstack:/var/lib/localstack
      # Fixtures, see https://docs.localstack.cloud/references/init-hooks/
      - ./localstack/init/ready.d:/etc/localstack/init/ready.d" # SQS hooks
      # Only needed for Lambdas
#      - /var/run/docker.sock:/var/run/docker.sock
  redpanda:
    # Mainly from: https://docs.redpanda.com/redpanda-labs/docker-compose/single-broker/
    # See also: https://docs.redpanda.com/current/deploy/deployment-option/self-hosted/docker-image/
    image: docker.redpanda.com/redpandadata/redpanda:v24.3.3
    container_name: redpanda
    command:
      - redpanda start
      - --mode dev-container
      - --smp 1
      - --kafka-addr internal://0.0.0.0:9092,external://0.0.0.0:19092
      # Address the broker advertises to clients that connect to the Kafka API.
      # Use the internal addresses to connect to the Redpanda brokers
      # from inside the same Docker network.
      # Use the external addresses to connect to the Redpanda brokers
      # from outside the Docker network.
      - --advertise-kafka-addr internal://redpanda:9092,external://127.0.0.1:19092
      - --pandaproxy-addr internal://0.0.0.0:8082,external://0.0.0.0:18082
      # Address the broker advertises to clients that connect to the HTTP Proxy.
      - --advertise-pandaproxy-addr internal://redpanda:8082,external://127.0.0.1:18082
      - --schema-registry-addr internal://0.0.0.0:8081,external://0.0.0.0:18081
      # Redpanda brokers use the RPC API to communicate with each other internally.
      - --rpc-addr redpanda:33145
      - --advertise-rpc-addr redpanda:33145
    ports:
      - "18081:18081"
      - "18082:18082"
      - "19092:19092"
      - "19644:9644"
    volumes:
      - redpanda:/var/lib/redpanda/data
    networks:
      - redpanda_network
#    healthcheck:
#      test: [ "CMD-SHELL", "rpk cluster health | grep -E 'Healthy:.+true' || exit 1" ]
#      interval: 15s
#      timeout: 3s
#      retries: 5
#      start_period: 5s
  redpanda-console:
    image: docker.redpanda.com/redpandadata/console:v2.8.2
    entrypoint: /bin/sh
    command: -c "echo \"$$CONSOLE_CONFIG_FILE\" > /tmp/config.yml; /app/console"
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
      CONSOLE_CONFIG_FILE: |
        kafka:
          brokers: ["redpanda:9092"]
          schemaRegistry:
            enabled: true
            urls: ["http://redpanda:8081"]
        redpanda:
          adminApi:
            enabled: true
            urls: ["http://redpanda:9644"]
        connect:
          enabled: true
          clusters:
            - name: local-connect-cluster
              url: http://connect:8083
    ports:
      - "8080:8080"
    networks:
      - redpanda_network
    depends_on:
      - redpanda
